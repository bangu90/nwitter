{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","onFileChange","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","maxLength","for","faPlus","accept","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c34988fc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBiligA6xBPveyrBDYWg4OO2nOAImrAmgk\",\n    authDomain: \"nwitter-3be5d.firebaseapp.com\",\n    projectId: \"nwitter-3be5d\",\n    storageBucket: \"nwitter-3be5d.appspot.com\",\n    messagingSenderId: \"116527743756\",\n    appId: \"1:116527743756:web:7b2a67eb1c7d01203f3f29\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance =firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n  return (\n    <div className=\"authContainer\">\n    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} />\n    <AuthForm />\n    <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      //URL 삭제 하는 방법 (이미지를 URL로 받고 있어서 이렇게 지움)\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n          <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required autoFocus\n              onChange={onChange} className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>       \n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n            <span onClick={onDeleteClick}>\n              <FontAwesomeIcon icon={faTrash} />\n            </span>\n            <span onClick={toggleEditing}>\n              <FontAwesomeIcon icon={faPencilAlt} />\n            </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default Nweet;","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n        return;\n      }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n        <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange}\n        style={{ opacity: 0,}} />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Nweet\" />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n            <img\n            src={attachment}\n            style={{\n                backgroundImage: attachment,\n            }}\n            />\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n            </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n    const history = useHistory();//이걸로 다시 처음 화면으로 돌아가게 하는것임 안하면 profile에서 멈춰있음\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n      authService.signOut();\n      history.push(\"/\");\n    };\n    const onChange = (event) => {\n        const {\n          target: { value },\n        } = event;\n        setNewDisplayName(value);\n      };\n      const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n          await userObj.updateProfile({\n            displayName: newDisplayName,\n          });\n          refreshUser();\n        }\n      };\n      return (\n          <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input onChange={onChange} type=\"text\" autoFocus placeholder=\"Display name\" value={newDisplayName} className=\"formInput\" />\n                <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10,}} />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log Out</span>\n        </div>\n  );\n};","import React from \"react\";\nimport {Link} from \"react-router-dom\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObj}) => \n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                </Link>            \n            </li>\n            <li>\n                {/* UserObj.displayName으로 해서 유저의 이름이 포로파일에 올라옴 */}\n                <Link to=\"/profile\"\n                    style={{ marginLeft: 10, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", fontSize: 12,}} >\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                <span style={{ marginTop: 10 }}>\n                    {userObj.displayName\n                    ? `${userObj.displayName}의 Profile`: \"Profile\"}\n                </span>\n                </Link>            \n            </li>\n        </ul>\n    </nav>\n\nexport default Navigation;","import React, {useState} from \"react\";\nimport { HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n      <Router>\n        {isLoggedIn && <Navigation userObj={userObj} />}\n        <Switch>\n          {isLoggedIn ? (\n            <>\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport firebase from 'fbase';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n "],"sourceRoot":""}